{"version":3,"sources":["logo.svg","Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,I,YCETA,EAAc,WAClB,OACE,gCACE,+BACE,wCACA,uCACA,gDAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,WAAKR,EAAMS,gBAAgBJ,IAA5C,wBAJKA,MASb,OAAO,gCAAQJ,KAeFS,E,4JAXb,WACE,MAA2CC,KAAKX,MAAxCE,EAAR,EAAQA,cAAeO,EAAvB,EAAuBA,gBACvB,OACE,kCACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,W,GAN7CG,a,OCkBLC,E,4MA5CbC,aAAe,CACbR,KAAM,GACNC,IAAK,I,EAGPQ,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGd,EAAOa,K,EAIZE,WAAa,WACX,EAAKrB,MAAMsB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGrB,WACE,MAAsBH,KAAKI,MAAnBT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IACd,OACE,iCACE,uBAAOgB,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHN,MAAOb,EACPoB,SAAUf,KAAKK,eACjB,uBAAOO,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHN,MAAOZ,EACPmB,SAAUf,KAAKK,eACjB,uBAAOQ,KAAK,SAASL,MAAM,SAASX,QAASG,KAAKU,oB,GAvCvCT,aCwDJe,E,4MAlDbZ,MAAQ,CACNa,WAAW,CACT,CACEtB,KAAM,UACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,mBAEP,CACED,KAAM,SACNC,IAAK,e,EAKXE,gBAAkB,SAACJ,GACjB,IAAOuB,EAAc,EAAKb,MAAnBa,WAEP,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBiB,aAAe,SAACQ,GACd,EAAKV,SAAS,CACZQ,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,4CAI3C,WACE,OACE,sBAAKE,UAAY,YAAjB,UACE,2CACA,qFACA,cAAC,EAAD,CAAO9B,cAAeS,KAAKI,MAAMa,WAAYnB,gBAAiBE,KAAKF,kBACnE,yCACA,cAAC,EAAD,CAAMa,aAAcX,KAAKW,sB,GA7CfV,aCKHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c222da2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\n\nconst TableHeader = ()=>{\n  return(\n    <thead>\n      <tr>\n        <th> Name </th>\n        <th> Job </th>\n        <th> Remove </th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props)=>{\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={()=>{props.removeCharacter(index)}}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n  render(){\n    const { characterData, removeCharacter } = this.props\n    return (\n      <table>\n       <TableHeader/>\n       <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n      </table>\n    )\n  }\n}\n\nexport default Table","import React, {Component} from 'react'\n\nclass Form extends Component{\n  initialState = {\n    name: '',\n    job: '',\n  }\n\n  state = this.initialState\n\n  handleChange = (event) =>{\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render(){\n    const { name, job } = this.state\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange}/>\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange}/>\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    )\n  }\n}\n\nexport default Form","import logo from './logo.svg';\nimport './App.css';\nimport Table from './Table'\nimport { Component } from 'react';\nimport Form from './Form'\n\n\nclass App extends Component {\n  state = {\n    characters:[\n      {\n        name: 'Charlie',\n        job: 'Janitor',\n      },\n      {\n        name: 'Mac',\n        job: 'Bouncer',\n      },\n      {\n        name: 'Dee',\n        job: 'Aspring actress',\n      },\n      {\n        name: 'Dennis',\n        job: 'Bartender',\n      },\n    ]\n  }\n\n  removeCharacter = (index) =>{\n    const {characters} = this.state\n  \n    this.setState({\n      characters: characters.filter((character, i)=>{\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({\n      characters: [...this.state.characters, character]\n    })\n  }\n\n  render(){\n    return ( \n      <div className = \"container\" >   \n        <h1>React App</h1>\n        <div>Add a character with a name and a job to the table</div>     \n        <Table characterData={this.state.characters} removeCharacter={this.removeCharacter}/> \n        <h1>Add New</h1>\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import App from './Api';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}